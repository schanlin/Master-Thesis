{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 Sitka Text;}{\f1\fmodern\fcharset0\fprq2 Segoe UI;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;\red128\green128\blue128;\red182\green231\blue254;\red255\green250\blue145;\red189\green244\blue155;\red252\green226\blue33;\red255\green171\blue186;\red215\green127\blue250;\red255\green196\blue160;\red202\green202\blue202;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\deftab1200\fet2\ftnbj\aenddoc
\f0\fs24\cf0\ftnbj\ftnnar\aftnnar
\sectd\sftnnar\saftnnar\sftnnar\saftnnar\pgndec\pgnrestart\pgnstarts1{\header{}}{\footer{}}
\pard\plain \ltrch\loch {\f1\fs18\b0\i0 I: bist du damit einverstanden, dass du hier aufgezeichnet wirst?}
\par\pard\plain \ltrch\loch \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: ja, ich bin damit einverstanden}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: wie alt bist du?}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: 22}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: wie viele Jahre programmierst du insgesamt schon?}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: seit 2017, das sind 5 jahre}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: wie viele davon in Ausbildung?}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: 4}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: welche art ausbildung?}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: studium bachelor informatik}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: wie viele jahre hast du f\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCr gr\u246\'F6\u223\'DFere softwareprojekte programmiert, zum beispiel in einer firma?}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: da w\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCrde ich mal 1 jahr sagen, falls es z\u228\'E4hlt, dass ich bei der bei meinem vorherigen Arbeitgeber dort ne hardware-ansteuerung f\u252\'FCr ne drohne entwickelt hab}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: wie gro\loch\af1\hich\af1\dbch\af1\uc1\u223\'DF war das projekt? also unter 900 zeilen, zwischen 900 und 40'000 zeilen oder \u252\'FCber 40'000 zeilen?}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: also das waren so um die 30'000 zeilen code, denke ich}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: auf einer skala von 1 bis 10, also 1 sehr unerfahren und 10 sehr erfahren, wie hoch sch\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4tzt du deine eigene programmiererfahrung ein?}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: 9}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: auf einer skala von 1 bis 5, wie hoch sch\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4tzt du deine programmiererfahrung im vergleich mit experten mit 20 jahren praktischer erfahrung ein?}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: 2}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: auf einer skala von 1 bis 5, wie hoch sch\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4tzt du deine programmiererfahrung im vergleich mit deinen kollegen, beziehungsweise mit leuten, die \u228\'E4hnliches machen wie du, ein?}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: also ich geh jetzt mal vom studium aus, da w\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCrde ich sagen 5}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: wie viele programmiersprachen kennst du, bei denen du deine programmiererfahrung bei 3 oder h\loch\af1\hich\af1\dbch\af1\uc1\u246\'F6her einsch\u228\'E4tzen w\u252\'FCrdest?}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: 9}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: welche sind das?}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: C, C++, das w\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCrde ich als eine nehmen}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: dann sind wir eher bei 10}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I2: die w\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCrde ich als 2 nehmen, ja}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: dann Rust, Kotlin, Python, Java, JavaScript, TypeScript, Haskell, C# und php}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: (z\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4hlt bis 11)}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: oh, dann habe ich mich verz\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4hlt}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: dann nehmen wir 11}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: wieder auf einer skala von 1 bis 5, wie erfahren bist du mit den folgenden programmier-paradigmen? funktionale programmierung?}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: 5}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: imperative programmierung?}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: 5}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: logische programmierung?}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: 2}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: und objekt-orientiert?}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: 5}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: dann kommen wir zum zweiten teil. das sind fragen, da geht es um deinen programmierprozess. und daf\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCr w\u252\'FCrde ich dich einfach gern bitten, mir etwas \u252\'FCber ein aktuelles projekt von dir zu erz\u228\'E4hlen. kann von der arbeit sein, kann privat sein, kann abgeschlossen sein, kann sich noch in arbeit befinden. einfach so ein bisschen kontext, dass wir wissen, was ist das f\u252\'FCr ein projekt und dann wie gehst du dabei vor?\~}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: aktuell schreibe ich f\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCr mich privat eine kleine app, die daf\u252\'FCr da sein soll, sp\u228\'E4ter so klassische b\u252\'FCrokratische (?) daten zu managen. wo man dann am ende sagen kann, man kann einen vertrag einscannen, beziehungsweise daten eingeben und dann hat man da vertragskonto, personennummer, monatliche kosten und kann auch andere monatliche kosten und halt alles mit auflisten. und h\u228\'E4tte dann potentiell dabei ansprechpartner, beziehungsweise email, beziehungsweise wo kann man sich einloggen, um das dann auch zu k\u252\'FCndigen, dass man solche sachen managen kann. dazu sollen dann am ende auch mietvertr\u228\'E4ge, (?)-vertr\u228\'E4ge und alles m\u246\'F6gliche mitreingeh\u246\'F6ren und im idealen fall soll das einfach nur eine scan-funktion und die app soll das dann halt alles automatisch aus dem vertrag auslesen k\u246\'F6nnen. wie mache ich das? ist das interessant?}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 I: ja, das ist interessant}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 B:}{\f1\fs18\b0\i0  okay, wie mache ich das. also ich habe mich in dem kontext jetzt das erste mal wirklich mit app-programmierung auseinandergesetzt. und das mache ich nativ mit kotlin. daf\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCr schreibe ich halt in kotlin das frontend daf\u252\'FCr und im backend wollte ich mich schon l\u228\'E4nger mal mit so containerisierung auseinandersetzen und schreib dementsprechend in/ also f\u252\'FCr docker-container microservices in verschiedenen programmiersprachen. einserseits nutze ich da auch kotlin f\u252\'FCr so die ganzen klassischen sachen, so die datenbank abfragen. f\u252\'FCr sachen die so image-processing brauchen, habe ich ein python-microservice. f\u252\'FCr sachen, die so ein bisschen rechenaufwendig sind und weil ich die sprache sehr mag, habe ich rust genutzt, das hei\u223\'DFt die drei sprachen nutze ich im backend. wie bin ich da vorgegangen? }{\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 ich habe, weil es ein hobby-projekt ist, keine wirklich lange design-phase gehabt, sondern einfach lust drauf gehabt, das zu starten.}{\f1\fs18\b0\i0  und }{\f1\fs18\b0\i0\cb5\chshdng0\chcbpat5 hab halt einfach angefangen zu programmieren}{\f1\fs18\b0\i0 , }{\f1\fs18\b0\i0\cb6\chshdng0\chcbpat6 indem ich mir angeguckt hab, wie erstellt man ein app-frontend, wie kann man damit was machen. das hei\loch\af1\hich\af1\dbch\af1\uc1\u223\'DFt, da habe ich erstmal so ein bisschen geguckt und ein bisschen rumgeklickt, rumgeschaut, bis ich dann irgendwo (?) funktionales, gut aussehendes design-prinzip hatte, also wie es aussah}{\f1\fs18\b0\i0 . und hab mich dann halt im hintergrund ein bisschen damit auseinandergesetzt, wie man/ also, deployment w\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCrde ich das nicht genau bezeichnen, aber wie man das halt dann wirklich alles aufsetzen kann mit den containern im hintergrund. }{\f1\fs18\b0\i0\cb6\chshdng0\chcbpat6 das hei\loch\af1\hich\af1\dbch\af1\uc1\u223\'DFt, damit habe ich mich dann erstmal auseinandergesetzt, bevor ich wirklich in die programmierung reingegangen bin.}{\f1\fs18\b0\i0  bei der programmierung dann im hintergrund habe ich bei rust das rocket-framework benutzt, das kannte ich schon aus einem vorherigen projekt, da musste ich also (?) schnell nachschauen. }{\f1\fs18\b0\i0\cb5\chshdng0\chcbpat5 hab da halt einfach so ein bisschen hin und her programmiert.}{\f1\fs18\b0\i0  bei python, image-processing, hab ich dann sowas wie opencv benutzt und flask f\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCr den api zugriff, das kannte ich halt auch schon. und bei php, da schreibt man ja nativ mit apis, da habe ich kein framework benutzt, da habe ich/ \u228\'E4h, nicht php, kotlin. kotlin, da habe ich dann halt spring benutzt. und spring habe ich da auch das erste mal benutzt und musste dementsprechend auch erstmal ein bisschen nachschauen, wie man das \u252\'FCberhaupt macht.}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 08:28\~I: um das nochmal so ein bisschen zusammenzufassen, also du hast dich halt in die verschiedenen frameworks undso, die du benutzt, eingelesen und dann/ habe ich das richtig verstanden, du hast gesagt, du hast so ein bisschen "hin und her" programmiert dabei?  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 08:48\~B: genau. eingelesen trifft es nicht ganz genau, also ab und zu schon in die dokumentation gucken, vor allem bei sachen, wo ich mich gar nicht mit auskenne, schaue ich am anfang immer youtube videos, die so ein bisschen zeigen, wie es geht  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 09:09\~I: }{\f1\fs18\b0\i0\cb5\chshdng0\chcbpat5 was meinst du mit "hin und her programmieren"}{\f1\fs18\b0\i0 ?  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 09:13}{\f1\fs18\b0\i0 \~B: also }{\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 dass ich halt nicht wirklich einen design-prozess durchlebt habe in dem projekt f\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCr mich, sondern einfach denke: hey, zum beispiel ein authentifikations-service w\u228\'E4r jetzt ganz interessant. und dass ich dann halt gucke, ja, wo mache ich das jetzt.}{\f1\fs18\b0\i0  }{\f1\fs18\b0\i0\cb6\chshdng0\chcbpat6 authentifikationsservice, habe ich ein bisschen rumgeguckt, was gibt's da alles m\loch\af1\hich\af1\dbch\af1\uc1\u246\'F6gliche und hab dann f\u252\'FCr mich \u252\'FCberlegt, damit ich einfach mal wei\u223\'DF, wie das funktioniert.}{\f1\fs18\b0\i0  }{\f1\fs18\b0\i0\cb5\chshdng0\chcbpat5 dann habe ich das von null auf in rust implementiert und mich da halt so ein bisschen st\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCck f\u252\'FCr st\u252\'FCck langgehangelt.}{\f1\fs18\b0\i0  also erstmal nach dem prinzip, erstmal halt die api-anfrage, dass man irgendwie nutzer und nen passwort \loch\af1\hich\af1\dbch\af1\uc1\u252\'FCbermittelt. dann auch irgendwie, dass man sich darum k\u252\'FCmmert, ja ich brauche eine datenbank, um das zu speichern. dann nat\u252\'FCrlich, ja, passw\u246\'F6rter will man nicht unverschl\u252\'FCsselt in der datenbank haben. das hei\u223\'DFt, dann habe ich mich damit auseinandergesetzt. dann habe ich geschaut, wie kann man das im web tats\u228\'E4chlich weitergeben, dass eine person authentifiziert ist. das passiert dann zum beispiel durch cookies. aber bei cookies m\u246\'F6chte man dann ja zum beispiel auch nicht den nutzernamen und das passwort drinstehen haben, weil das w\u228\'E4re sicherheitskritisch anf\u228\'E4llig, wenn man zum beispiel (?) machen w\u252\'FCrde. dementsprechend nutzt man sogenannte jwts, json web tokens, da musste ich halt auch erstmal gucken, wie die funktionieren, und hab mich dann auch dort immer so ein bisschen umgeschaut, wie funktionieren die genau. das hei\u223\'DFt, angefangen mit, wie funktioniert die verschl\u252\'FCsselung davon, welche protokolle gibt es da, um die zu nutzen, wie gibt man das dann von rust im (?) jetzt tats\u228\'E4chlich den cookie als jwt zur\u252\'FCck an den browser und solche sachen. und das in ganz ganz vielen bereichen. und dann hatte ich halt den authentifikations-service. }{\f1\fs18\b0\i0\cb5\chshdng0\chcbpat5 und dann habe ich erstmal wieder geguckt, aha, backend, sch\loch\af1\hich\af1\dbch\af1\uc1\u246\'F6n und gut, und hab das dann erstmal im frontend implementiert}{\f1\fs18\b0\i0 , also in der\~ app tats\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4chlich, um zu schauen, geht das auch alles. }{\f1\fs18\b0\i0\cb5\chshdng0\chcbpat5 und dann habe ich ein bisschen weiter im frontend gemacht um zu schauen, was w\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4re denn cool so zu haben, also wie soll es dann am ende aussehen}{\f1\fs18\b0\i0 .\~}{\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 das hei\loch\af1\hich\af1\dbch\af1\uc1\u223\'DFt nicht, ich w\u252\'FCrde es jetzt mal als statisch bezeichnen, als die ganze zeit strukturiert am backend zu arbeiten und da erstmal die gesamte struktur aufzubauen mit automatisierten tests und allem m\u246\'F6glichen, nein, eher so die ganze zeit probieren und f\u252\'FCr mich das proof of concept hinzubekommen}{\f1\fs18\b0\i0   }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 11:27\~I: also du f\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4ngst einfach so an einem punkt mal so an und guckst, was sich dann daraus entwickelt, was an notwendigkeiten  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 B: ja, genau. bei dem projekt auf jeden fall}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 11:40\~I: also entspricht das/ also ist das nicht quasi immer wie du vorgehst?  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 11:44}{\f1\fs18\b0\i0 \~B: das kommt ganz darauf an. jetzt zum beispiel im bereich, }{\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 was ich halt hier auch f\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCr die arbeit mache, das ist ja eher so ein bisschen datenauswertung, data science. da lohnt es sich meiner ansicht nicht, test driven development zu schreiben}{\f1\fs18\b0\i0 , weil das eher alles so hoch volatilen */ mir f\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4llt gerade das deutsche wort nicht ein. und dementsprechend }{\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 da einen statischen design-prozess durchzugehen, wenn man halt, ich sag jetzt mal in anf\loch\af1\hich\af1\dbch\af1\uc1\u252\'FChrungszeichen, NUR ein paar skripte schreibt, die daten auswerten, wei\u223\'DF ich nicht, ob sich da ne gesamte infrastruktur f\u252\'FCr lohnt, die aufzusetzen}{\f1\fs18\b0\i0 . also da mache ich dann meistens so/ oder halt mich einfach an den research questions halt fest und gucke, wie man die halt genau abarbeiten kann. aber das w\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCrde ich jetzt auch nicht als struktur f\u252\'FCr ein software-produkt aufbauen.\~}{\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 als ich zum beispiel die hardwareansteuerung gemacht hab}{\f1\fs18\b0\i0 , }{\f1\fs18\b0\i0\cb7\chshdng0\chcbpat7 da habe ich legacy-code bekommen und um dort reinzukommen habe ich halt erstmal ein uml-diagramm daf\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCr gezeichnet, klassendiagramm}{\f1\fs18\b0\i0 . }{\f1\fs18\b0\i0\cb6\chshdng0\chcbpat6 und habe \loch\af1\hich\af1\dbch\af1\uc1\u252\'FCberlegt, wie tats\u228\'E4chlich diese ganzen klassen miteinander kommunizieren}{\f1\fs18\b0\i0  }{\f1\fs18\b0\i0\cb6\chshdng0\chcbpat6 und hab das dann halt weiter ausgebaut, indem ich halt auch weiter mit dem uml erstmal \loch\af1\hich\af1\dbch\af1\uc1\u252\'FCberlegt hab, wie kann ich da konzeptuell arbeiten}{\f1\fs18\b0\i0 .\~  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 12:59\~I: da habe ich jetzt grade akustisch nicht ganz verstanden, also zu welchem projekt war das mit dem uml?  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 13:03}{\f1\fs18\b0\i0 \~B: das, wo ich gesagt hatte, bei meinem vorherigen arbeitgeber, wo ich dieses eine jahr an der hardwareansteuerung f\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCr eine drohne gearbeitet habe. }{\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 also das h\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4ngt ganz davon ab, ob es jetzt f\u252\'FCr mich ein pers\u246\'F6nliches projekt ist, wo ich sage, hey, da m\u246\'F6chte ich f\u252\'FCr mich einfach nur beweisen oder nur lernen, wie's geht. h\u228\'E4ngt davon ab, wie/ welche fluktuation oder wie gro\u223\'DF das projekt am ende wird, wie jetzt zum beispiel bei datenauswertungen}{\f1\fs18\b0\i0 . okay, da steckt schon einiges an skripten hinter, ist jetzt aber keine ganze software-struktur. }{\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 wenn es jetzt aber ein produkt sein soll, was \loch\af1\hich\af1\dbch\af1\uc1\u252\'FCber l\u228\'E4ngerfristige zeit dokumentiert sein soll und auch wirklich genutzt werden soll in gr\u246\'F6\u223\'DFerem stil und auch von mehreren programmierern, dann arbeite ich alleine aus dokumentationsgr\u252\'FCnden mit ner design-phase}{\f1\fs18\b0\i0   }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 14:01\~I: also du sagst, die gr\loch\af1\hich\af1\dbch\af1\uc1\u246\'F6\u223\'DFten kriterien, dass sich das unterscheidet, sind halt, ob es privat f\u252\'FCr dich oder f\u252\'FCr die arbeit, und die gr\u246\'F6\u223\'DFe  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 14:13\~B: genau  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 14:17\~I: aber wenn du privat f\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCr dich programmierst, dann \u228\'E4hnelt der prozess meistens dem, was du jetzt f\u252\'FCr die app beschrieben hast  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 14:23\~B: genau  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 14:30\~I: wenn wir jetzt beim app-projekt bleiben, oder generell bei den privaten projekten, wenn du das programmierst, wenn du die app schreibst, hast du da wen im kopf? also schreibst du das f\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCr jemanden, also irgendwie f\u252\'FCr einen endnutzer oder so oder nur f\u252\'FCr dich selbst, oder hast du da irgendwie was im kopf?  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 14:49\~B: ich schreib ganz ganz viel davon einerseits manchmal, um f\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCr mich gewisse sachen zu automatisieren, zu vereinfachen. wenn's jetzt gewisse skripte sind, um sachen runterlaufen zu lassen, oder wie jetzt diese app, die soll f\u252\'FCr mich dann halt auch (?) diese b\u252\'FCrokratischen abo-modelle und sowas so ein bisschen auf einen blick haben, weil damit bin ich sehr sehr schlecht pers\u246\'F6nlich. und um sowas im blick zu behalten und deswegen das irgendwo zentral zu haben, w\u228\'E4r ganz cool. oder ich mach gewisse sachen einfach nur aus lernzwecken f\u252\'FCr mich. das hei\u223\'DFt, damit ich sehe, aha, dieses teilfeld der informatik, da habe ich noch nie so viel drin gemacht und das interessiert mich jetzt einfach mal, da ein bisschen einblick zu bekommen. das hei\u223\'DFt, wenn man zum beispiel/ compiler oder interpreter benutzt man ja eigentlich immer. und um ein bisschen genauer zu verstehen, wie funktionieren die, kann man sich auch mal so nen kleinen selbst schreiben. und das finde ich dann halt das interessante, um mehr einblick in die gesamten technologien zu bekommen  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 15:58\~I: gut, ich glaube, das ist f\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCr den teil eigentlich schon gut. dann w\u252\'FCrd ich zum letzten teil \u252\'FCbergehen vom interview. und da geht's um die frage, hast du schonmal eins deiner projekte abgebrochen?  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0\cb8\chshdng0\chcbpat8 16:24}{\f1\fs18\b0\i0 \~B: ja, ich sag jetzt mal nicht aktiv abgebrochen, sondern eher liegen gelassen. also dass ich dann wirklich sag: hey, ich hab hier dieses projekt, da hab ich so vielleicht ein paar grundz\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCge gelernt und jetzt ist es dann halt einfach so, hier interessiert mich erstmal was anderes. obwohl, doch, doch, }{\f1\fs18\b0\i0\cb8\chshdng0\chcbpat8 ein paar projekte hab ich mal abgebrochen. das sind vor allem bereiche in der computergrafik, weil mir das dann an manchen stellen viel zu aufwendig und zu weit weg vom programmieren war und eher die reine mathematische theorie war und die gibt es schon und die hat mich dann nicht so interessiert, die eins zu eins abzuschreiben}{\f1\fs18\b0\i0   }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 17:11\~I: okay, also haupts\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4chlich dann, wenn entweder das interesse am projekt an sich quasi weg ist, oder was anderes halt interessanter ist, oder wenn du feststellst, dass das projekt eigentlich zu weit weg von deinem eigentlichen interessengebiet ist  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 17:24\~B: genau. wenn ich das gef\loch\af1\hich\af1\dbch\af1\uc1\u252\'FChl hab, dass es einfach nur stumpfes abtippen oder \u252\'FCbersetzen von einer programmiersprache in eine andere oder vom konzeptuell mathematischen in eine programmiersprache ist, das finde ich f\u252\'FCr meine hobbyprojekte immer sehr sehr eint\u246\'F6nig und habe ich meistens keine lust drauf}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 17:51\~I: gab's schonmal projekte oder momente, an denen du einfach l\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4nger irgendwie h\u228\'E4ngen geblieben bist an einer stelle im programm?  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 17:59\~B: ja, das gab's. sogar h\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4ufiger  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 18:06\~I: h\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4ufiger, okay? wann passiert das, hast du da irgendwie ein beispiel im kopf?  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0\cb8\chshdng0\chcbpat8 18:11}{\f1\fs18\b0\i0 \~B: ja. ich kann ein beispiel machen und daraus k\loch\af1\hich\af1\dbch\af1\uc1\u246\'F6nnen wir vielleicht schauen, wann das h\u228\'E4ufiger passiert. also ich hab jetzt keine regel, wenn ich so \u252\'FCberlege, die mir direkt als erster gedanke in den kopf kommt, wann ich solche }{\f1\fs18\b0\i0\cb9\chshdng0\chcbpat9 blockaden}{\f1\fs18\b0\i0  direkt hab. zum beispiel bei dieser hardwareansteuerung der drohne hatte ich/ das war eine kleine server-architektur, wo es halt einen server gab und verschiedene clients konnten anfragen an diesen server senden, wie sich die drohne bewegen soll. und }{\f1\fs18\b0\i0\cb8\chshdng0\chcbpat8 es gab da ein problem, dass, wenn der client anfragen zum server gesendet hat, dann hat das funktioniert. aber manchmal gab es dann einen deadlock, wo dieser server komplett blockiert hat. da das ge-multi-threaded war, auf ganz vielen ebenen, aber nur ein thread blockiert hat, fand ich es unglaublich schwierig, den fehler tats\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4chlich zu finden, wo das passiert. und daran sa\u223\'DF ich, ich glaube, insgesamt drei oder vier wochen.}{\f1\fs18\b0\i0  also ich hab in der zeit woanders noch weiterprogrammiert, aber immer, wenn halt dieser fehler aufgetaucht ist, weil der halt nicht jedes mal aufgetaucht ist, }{\f1\fs18\b0\i0\cb10\chshdng0\chcbpat10 konnte ich halt auch nicht wirklich testen}{\f1\fs18\b0\i0 , ob er sinnvoll weg ist. das hei\loch\af1\hich\af1\dbch\af1\uc1\u223\'DFt, immer wenn ich dachte: hey, vielleicht habe ich ihn jetzt gel\u246\'F6st, dann habe ich es nat\u252\'FCrlich 10, 20 mal probiert, ob der jetzt weg ist. es konnte aber sein, dass das durch die nicht-deterministik von solchen mutexes, von den mutexes, die da benutzt werden und von den threads, das einfach zufall war, dass es in den 20 mal nicht passiert.\~  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 19:49\~I: okay. also einfach ein sehr schwieriger bug  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 19:53\~B: genau  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 20:01\~I: findest du da noch andere beispiele oder ist es meistens sowas?  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0\cb8\chshdng0\chcbpat8 20:08}{\f1\fs18\b0\i0 \~B: also sonst, wo ich mal eine blockade im programmieren selbst hatte, war, }{\f1\fs18\b0\i0\cb8\chshdng0\chcbpat8 wenn ich dann nicht das dom\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4nen-wissen habe, wie zum beispiel was wir jetzt am anfang beim eeg hatten. wenn ich da einfach keine ahnung hatte, was man sucht, wie man tats\u228\'E4chlich vorgehen soll.}{\f1\fs18\b0\i0  das hei\loch\af1\hich\af1\dbch\af1\uc1\u223\'DFt, da haben wir eeg genutzt, ich mag das nur nochmal kurz zusammenfassen, in einer studie, um herauszufinden, welche mentale anstrengung eine person beim codelesen (?). die sache ist die, als wir damit angefangen hatten, ja okay, ich hatte schonmal so ein bisschen in eeg reingeguckt, aber }{\f1\fs18\b0\i0\cb8\chshdng0\chcbpat8 ich hatte noch nie hands on mit dem eeg wirklich dran gearbeitet.}{\f1\fs18\b0\i0  }{\f1\fs18\b0\i0\cb6\chshdng0\chcbpat6 ich hab zwar die daten aus gewissen programmen gesehen, ich hab auch mal mit gewissen libraries gearbeitet, um zu sehen, he, man kann das eeg so visualisieren und so dies und das machen.}{\f1\fs18\b0\i0  aber wirklich dann die ahnung haben oder das dom\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4nen-wissen haben, wie man tats\u228\'E4chlich dann damit umgeht, wenn das nicht da ist, }{\f1\fs18\b0\i0\cb8\chshdng0\chcbpat8 bringt nat\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCrlich jede library-dokumentation nichts, wenn man einfach nicht wei\u223\'DF, was man machen m\u246\'F6chte}{\f1\fs18\b0\i0 .  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 21:08\~I: also dir fehlt quasi das wissen, um \loch\af1\hich\af1\dbch\af1\uc1\u252\'FCberhaupt ne vorstellung zu entwickeln, wie dieses programm aussehen m\u252\'FCsste  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 21:15\~B: genau  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 21:23\~I: okay. dann haben wir ja quasi zwei verschiedene sachen. irgendwas, was da noch aus dem rahmen f\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4llt?  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 21:30\~B: nicht, das sich w\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCsste, nein  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 21:36\~I: alles klar. wie hast du die probleme gel\loch\af1\hich\af1\dbch\af1\uc1\u246\'F6st? also war das dann bei der drohne/ war das einfach weitertesten und irgendwann hat es dann gepasst?  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0\cb11\chshdng0\chcbpat11 21:53}{\f1\fs18\b0\i0 \~B: ne. da war's halt so, ich hab das halt \loch\af1\hich\af1\dbch\af1\uc1\u252\'FCber einen langen zeitraum versucht zu beheben. also wenn ich jetzt so generalisiere bei harten bugs, manchmal schaffe ich es dann, den fehler zu finden und zu sehen, aha, dort ist grober unfug passiert, der aber beim \u252\'FCberfliegen oder auch beim normalen lesen schon sinn ergibt, aber halt irgendwas au\u223\'DFer acht l\u228\'E4sst. bei der stelle bei der hardwareansteuerung habe ich den fehler tats\u228\'E4chlich nach wochen nicht gefunden. da habe ich es dann so gemacht, ich hab gesagt: hey, das ist so viel legacy-code, so viel verwurstelung, so viel c++-schwachsinn, der da genutzt worden ist, dass ich da ein, zwei nachtschichten gemacht hab und }{\f1\fs18\b0\i0\cb11\chshdng0\chcbpat11 das komplett neu geschrieben habe. und dann hat es funktioniert. ich hab diesen fehler auf teufel komm raus einfach nicht gefunden und hab's dementsprechend neu gemacht, von null auf.}{\f1\fs18\b0\i0  also nicht alles, aber halt dieses modul, wo der fehler aufgetaucht ist  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 22:47\~I: okay, und beim eeg, war das da einfach das fehlende wissen aneignen?  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0\cb11\chshdng0\chcbpat11 22:54}{\f1\fs18\b0\i0 \~B: genau, also }{\f1\fs18\b0\i0\cb11\chshdng0\chcbpat11 einerseits lesen, was man da alles machen kann}{\f1\fs18\b0\i0  und andererseits }{\f1\fs18\b0\i0\cb11\chshdng0\chcbpat11 die zusammenarbeit, was eher der gr\loch\af1\hich\af1\dbch\af1\uc1\u246\'F6\u223\'DFere punkt ist, mit leuten, die davon ahnung haben}{\f1\fs18\b0\i0 . das haben wir ja dann mit einem bekannten gemacht. mit dem habe ich mich dann mal zusammengesetzt, der hat mir ein bisschen literatur immer geschickt, der hat mir immer mal so ein bisschen gesagt, was es gibt. so wie es f\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCr mich wirkte, also er hat seine masterarbeit \u252\'FCber eeg geschrieben, oder hat immer halt noch, wie es halt in den meisten bereichen ist, immer noch so l\u252\'FCcken, wo man sich dann was aneignen kann. und das war gerade in dem feld, was wir gemacht haben, weil er eher so auf pattern-matching mit deep-learning gegangen ist und wir halt auf ne statische analyse, sag ich jetzt mal, \u252\'FCber cognitive load. dementsprechend hat es da einfach viel an kommunikation gebraucht, um zu wissen, auf welchem ast sind wir, auf welchem ast sind die anderen. und dass man dann kommuniziert und von den anderen lernen kann. }{\f1\fs18\b0\i0\cb11\chshdng0\chcbpat11 beziehungsweise habe ich dort auch mal eine sache, die ich gebraucht hab, nachts in einem youtube video gefunden, was gar nichts mit eegs eigentlich zu tun hatte.}{\f1\fs18\b0\i0  da ging es dann wirklich/ dadurch dann, irgendein (?)-video geguckt. wenn ich es genau sagen soll, das war, falls das aus marvel bekannt ist, es gibt da so doctor octo-, octorak oder so, der solche mechanisch steuerbare arme hat. und das hat jemand in einem hobby-projekt versucht nachzubauen mit nem eeg, wo es dann darum ging, diese arme irgendwie mit gedanken zu steuern. das war alles sehr st\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCmperhaft gemacht, hat aber so ein paar ideen gebracht, was man machen k\u246\'F6nnte. das hei\u223\'DFt, wie man dann zum beispiel mit den hirnwellen oder mit den einzelnen frequenzb\u228\'E4ndern agieren k\u246\'F6nnte, was wir dann auch dar\u252\'FCber/ also, }{\f1\fs18\b0\i0\cb9\chshdng0\chcbpat9 dass ich dann eine wesentlich klarere vorstellung hatte, wie das tats\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4chlich abl\u228\'E4uft und dementsprechend intern einfach irgendwie eine bessere repr\u228\'E4sentation hatte.}{\f1\fs18\b0\i0  wir hatten zu dem zeitpunkt schon ein vorgehen, das hat mir aber nochmal geholfen, das ein bisschen besser zu durchdringen. weil das in dem video einfach ziemlich gut erkl\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4rt war. oder ziemlich interessant und dementsprechend war ich da nochmal angefuchst, da nochmal ein bisschen tiefer zu tauchen, um das zu verstehen.  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 25:12\~I: und h\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4ttest du jetzt bei dem eeg/ oder war dein vorgehen da schlussendlich zu vergleichen mit dem jetzt zum beispiel von deiner app? Oder war das anders, weil es ein Arbeitsprojekt war?}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0\cb11\chshdng0\chcbpat11 25:28}{\f1\fs18\b0\i0 \~B: also bei meiner app bin ich jetzt selbst noch nicht auf harte bugs gesto\loch\af1\hich\af1\dbch\af1\uc1\u223\'DFen oder harte fehler oder harte blockaden. }{\f1\fs18\b0\i0\cb9\chshdng0\chcbpat9 weil es da halt so viele baustellen gibt, dass ich, wenn ich mir denke, hey, hier ist grad ein fehler oder eine blockade, dann denke ich mir halt an der stelle: okay, }{\f1\fs18\b0\i0\cb11\chshdng0\chcbpat11 dann machst du an einer anderen stelle kurz weiter}{\f1\fs18\b0\i0\cb9\chshdng0\chcbpat9 .}{\f1\fs18\b0\i0  weil irgendwann findet sich die motivation schon wieder, an der stelle mehr zu lesen. weil wenn ich jetzt, keine ahnung, eine woche lang nur am json web token sitze, warum auch immer, und mir dann denke, hey, ich hab jetzt hier einen fehler, }{\f1\fs18\b0\i0\cb11\chshdng0\chcbpat11 dann brauche ich ab und zu einfach ein bisschen abstand}{\f1\fs18\b0\i0 , um da wieder mehr motivation daf\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCr zu bekommen.  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 26:06\~I: okay, aber beim eeg h\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4tte das nicht geklappt?  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0\cb9\chshdng0\chcbpat9 26:12}{\f1\fs18\b0\i0 \~B: h\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4tte aufgrund der natur des softwareprodukts nicht funktioniert, weil es dort die letzte gro\u223\'DFe baustelle war, die gefehlt hat. dementsprechend sa\u223\'DF ich da halt dran und hatte halt nicht die punkte zum hin und her springen. dementsprechend war es da dann halt aktiv irgendwie versuchen, die l\u246\'F6sung zu finden und das nicht so passiv auf einen einrieseln zu lassen. und das aktive war halt mit den faktoren, die ich jetzt schon genannt hab.  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 26:43\~I: dann hast du jetzt noch gesagt, durch dieses video, was du da gesehen hast bei dem eeg, da hat sich dein bild im kopf quasi verbessert  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 26:55\~B: genau. das habe ich h\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4ufiger, dass ich sachen zwar manchmal lese, verstehe und denke, dass ich es verstand, aber irgendwann nochmal eine andere perspektive bekomme und dann wirklich das gef\u252\'FChl habe, das thema durchdringen zu k\u246\'F6nnen.  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 27:14\~I: okay, aber da geht es jetzt mehr um das thema allgemein  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 27:18\~B: ne, geht auch um ganz verschiedene sachen, das ist jetzt nicht nur bei diesem beispiel so, das war auch mal, wenn ich eine vorlesung als beispiel/ hier hab ich die vorlesung compilerbau eins und zwei, dachte, ja ok, alles verstanden und theoretisch niveau in der pr\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCfung auch alles gut abgeschnitten. und sp\u228\'E4ter habe ich mich dann irgendwann wirklich mit compilerbau auseinandergesetzt, \u252\'FCber ein buch, wie man das halt wirklich hands on machen w\u252\'FCrde. und dann hatte ich wirklich das gef\u252\'FChl: hey, vieles davon kommt mir bekannt vor aus der vorlesung, aber dass ich das jetzt nochmal auf einem anderen oder auf einem besseren niveau verstehe.  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 27:57\~I: okay, also es ist jetzt mehr auf einer wissensebene, es ist jetzt nicht quasi auf der coding-ebene  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0\cb9\chshdng0\chcbpat9 28:01}{\f1\fs18\b0\i0 \~B: nenene, }{\f1\fs18\b0\i0\cb9\chshdng0\chcbpat9 das ist nicht auf der coding-ebene, das ist eher wirklich die interne repr\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4sentation, die ich von gewissen dingen hab }{\f1\fs18\b0\i0  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 28:16\~I: gut, dann w\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4re der dritte teil des interviews auch vorbei, vielen dank. dann kann ich dir jetzt erz\u228\'E4hlen, worum's geht. ja du hast das stichwort selber eingeworfen mit den blockaden. weil ich hab mich ja mal vermehrt mit schreibblockaden befasst in meinem bachelor. und die idee von meiner masterarbeit ist, die theorie davon aufs programmieren zu \u252\'FCbertragen. und zu gucken, gibt es programmierblockaden und sind die vergleichbar mit schreibblockaden. hattest du das von mir schonmal irgendwie geh\u246\'F6rt, also dass du vielleicht unbewusst dich daran erinnert hast oder so?}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 29:21\~B: vor anderthalb jahren glaub ich, zur einzugsfeier, hast du, glaub ich, dar\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCber geredet. vielleicht habe ich das peripher mitbekommen, aber sonst war mir das jetzt nicht bewusst  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 29:33\~I: okay. ich hoffe, das passt. ja, das ist so die grundidee und deswegen frage ich zu programmierprozessen undso, weil schreibblockaden h\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4ngen halt auch viel mit dem schreibprozess zusammen  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 29:51\~B: okay, also wenn ich jetzt meine antworten reflektiere, dann war es bei mir sehr viel, wo ich sage, das ist eher so wissen und interne repr\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4sentation und nicht eher dieses coding-technische. ist das beim schreiben denn anders?  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 30:06\~I: also das ding ist/ also das ist jetzt die frage. viele blockaden k\loch\af1\hich\af1\dbch\af1\uc1\u246\'F6nnen quasi auftreten beim schreiben, wenn die gestaltbildung bezogen auf den text quasi fehlschl\u228\'E4gt. ist jetzt die frage, ob das beim coding, also die interne repr\u228\'E4sentation damit vergleichbar ist oder ob es sich halt wirklich eher auf diese wissensebene bezieht.}
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 30:39\~B: mhm, okay  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 30:40\~I: wei\loch\af1\hich\af1\dbch\af1\uc1\u223\'DF nicht, was sagt dein bauchgef\u252\'FChl?\~  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0\cb9\chshdng0\chcbpat9 3}{\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 0}{\f1\fs18\b0\i0\cb9\chshdng0\chcbpat9 :}{\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 4}{\f1\fs18\b0\i0\cb9\chshdng0\chcbpat9 4}{\f1\fs18\b0\i0 \~B: es ist nicht reine wissensebene, es ist auch dann schon/ mit interner repr\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4sentation, ich wei\u223\'DF jetzt nicht, was gestaltbildung genau aussagt im schreibprozess, }{\f1\fs18\b0\i0\cb6\chshdng0\chcbpat6 aber es geht dann halt auch so ein bisschen darum, denke ich, WIE strukturiert man den code.}{\f1\fs18\b0\i0  }{\f1\fs18\b0\i0\cb6\chshdng0\chcbpat6 weil wenn ich mir jetzt denke, man kann ihn ja auch nicht komplett unstrukturieren. man kann ja nicht sagen, ich suche zuerst in dem feld und danach sortiere ich es.}{\f1\fs18\b0\i0  andersrum macht es nat\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCrlich mehr sinn. das kann man jetzt vielleicht auf wissensebene sagen, dass man halt sagt: hey, sortieren macht als erstes sinn, wenn ich was suchen m\u246\'F6chte oder wenn ich mehrfach suchen m\u246\'F6chte. beziehungsweise kann das auch als interne abfolge von schritten sein, die, also }{\f1\fs18\b0\i0\cb6\chshdng0\chcbpat6 wenn ich ganz h\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4ufig \u252\'FCber algorithmen nachdenke, dann denke ich schon in so einer art pseudocode nach, ganz h\u228\'E4ufig.}{\f1\fs18\b0\i0  wenn ich jetzt sage: hey, ich m\loch\af1\hich\af1\dbch\af1\uc1\u246\'F6chte ein element finden, dann denke ich schon so, sortieren, halbieren, suchen. so nach dem motto. und wenn ich jetzt bin\u228\'E4re suche mit einem sortier-algorithmus verkn\u252\'FCpfen m\u246\'F6chte. \u228\'E4hnlich bei einem dijkstra oder so, wenn man da mal einen komplexeren algorithmus nehmen m\u246\'F6chte. }{\f1\fs18\b0\i0\cb6\chshdng0\chcbpat6 dann wei\loch\af1\hich\af1\dbch\af1\uc1\u223\'DF ich nat\u252\'FCrlich, wie er funktioniert, aber ich muss das auch irgendwie umsetzen. und da geht's dann bei mir schon darum, welche schritte kommen wann, wie, warum und in welcher reihenfolge. wie sich das dann im code verh\u228\'E4lt, ist ja dann immer halt programmiersprache zu programmiersprache abh\u228\'E4ngig.}{\f1\fs18\b0\i0  wenn ich jetzt zum beispiel beim dijkstra bin, um das beispiel weiter aufzugreifen, und ich sage: hey, ich muss irgendwie wissen, welcher knoten der n\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4chste dran ist, so w\u228\'E4re das halt in meinem kopf. }{\f1\fs18\b0\i0\cb5\chshdng0\chcbpat5 dann kann ich das ja auf coding-ebene auf verschiedene weise machen.\~das kann ich ja einerseits mit ner priority-queue machen.}{\f1\fs18\b0\i0  }{\f1\fs18\b0\i0\cb6\chshdng0\chcbpat6 an der stelle mit meiner internen repr\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4sentation w\u252\'FCrde ich da noch nicht so dr\u252\'FCber nachdenken, ob das mit ner priority-queue ist oder einfach mit ner liste, die ich immer wieder sortiere.}{\f1\fs18\b0\i0  }{\f1\fs18\b0\i0\cb5\chshdng0\chcbpat5 das ist dann ne sache, die h\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4ngt dann davon ab, wie die programmiersprache das tats\u228\'E4chlich unterst\u252\'FCtzt.}{\f1\fs18\b0\i0  wenn ich jetzt sage: hey, ich hab jetzt, keine ahnung, ne programmiersprache, die priority-queues direkt unterst\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCtzt und es ist einfach convenient, die zu benutzen, dann nutze ich die auf jeden fall. wenn ich jetzt aber sage: hey, keine ahnung, es gibt die skiptsprache von godot, das ist ne game-engine, und da brauchte ich auch eine priorit\u228\'E4ts-warteschlange, hatte sie aber nicht, und es war in ner (?), wo es recht schnell gehen sollte, da habe ich dann halt gesagt: hey, okay, dann nutze halt ne liste, die du jedes mal sortierst. ist laufzeittechnisch absolut schrecklich, aber funktioniert vollkommen gleich vom verhalten her  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 33:20\~I: aber }{\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 du musst oder willst dir vorher den algorithmus dir vorher schon im kopf irgendwie vorstellen? also du brauchst da ein bild von?}{\f1\fs18\b0\i0   }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 33:27}{\f1\fs18\b0\i0 \~B: genau. also }{\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 dass ich nicht einfach drauflos code und zeile f\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCr zeile denke, was passiert, das kann auch ab und zu mal sein, aber meistens ist es ja so, dass ich vorher so schon ne schrittabfolge brauche oder mir gedanken machen muss, wie die schrittabfolge sein k\u246\'F6nnte.}{\f1\fs18\b0\i0  es ist jetzt, wenn wir auf die programmier-paradigmen eingehen, bei funktionalen nicht so der stil, aber das programmier ich auch nicht jeden tag, sagen wir es mal. bei den klassischen funktionalen programmiersprachen, wie haskell, ist die ausf\loch\af1\hich\af1\dbch\af1\uc1\u252\'FChrungsreihenfolge ja tats\u228\'E4chlich komplett egal. das hei\u223\'DFt, da kann zeile drei vor zeile eins ausgef\u252\'FChrt werden. das ist nochmal ein bisschen anders, aber meistens programmiert man ja sequentiell oder objekt-orientiert und nur mit einem funktionalen STIL, sage ich mal, und da ist es halt schon so, dass man, }{\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 oder dass ich mir schritt f\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCr schritt im kopf \u252\'FCberlege, wie muss ich was machen. }{\f1\fs18\b0\i0 zum beispiel bei dem sortieren wei\loch\af1\hich\af1\dbch\af1\uc1\u223\'DF ich so ganz grob, ja, sortieren funktioniert schon irgendwie, und mach mir da keine gedanken drum, wie das in der sprache tats\u228\'E4chlich ausgel\u246\'F6st wird. ob das jetzt mit nem .sort() in java ist oder sort und dann den container in die funktion \u252\'FCbergeben in python, dann ist es mir auch tats\u228\'E4chlich ziemlich egal, was f\u252\'FCr ein sortieralgorithmus meistens dahinter ist. es sei denn, ich (?) jetzt in einer programmiersprache, die keinen sortieralgorithmus sch\u246\'F6n implementiert, wo man jetzt nicht ganz viel umwege nehmen muss, wie c oder sowas.  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0 35:00\~I: und wie verkn\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCpft sich das, diese vorstellung im kopf von der groben struktur, sich das zu machen, wie verkn\u252\'FCpft sich das mit dem, was du beschrieben hast am anfang, also dass du halt vom einen punkt zum anderen springt beim programmieren, also was halt grade sich ergibt aus dem, woran du arbeitest?  }
\par\plain \f1\fs18\b0\i0
\par\plain {\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 35:25}{\f1\fs18\b0\i0 \~B: da ist es dann halt so nach dem motto wie, wenn ich jetzt mal gucken m\loch\af1\hich\af1\dbch\af1\uc1\u246\'F6chte, ich greif mal das beispiel wieder auf von dem json web token. }{\f1\fs18\b0\i0\cb6\chshdng0\chcbpat6 da muss ich halt auch irgendwie vom ablauf wissen, hey, ich bekomme ne anfrage, ich verarbeite die anfrage, ich geb irgendein cookie zur\loch\af1\hich\af1\dbch\af1\uc1\u252\'FCck.}{\f1\fs18\b0\i0  }{\f1\fs18\b0\i0\cb5\chshdng0\chcbpat5 das kann ich grob schonmal implementieren so.}{\f1\fs18\b0\i0  }{\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 das ist ja schonmal so ein grobes top-down verst\loch\af1\hich\af1\dbch\af1\uc1\u228\'E4ndnis, wo ich sagen kann, hey, ich krieg die anfrage irgendwie, dann habe ich irgendwie ne funktion, die hei\u223\'DFt processing oder wie auch immer. und was dann da im detail alles passiert, kann ich ja auch st\u252\'FCck f\u252\'FCr st\u252\'FCck dann wieder in dieser funktion kl\u228\'E4ren}{\f1\fs18\b0\i0 . das hei\loch\af1\hich\af1\dbch\af1\uc1\u223\'DFt, entschl\u252\'FCsseln, gucken, wann das abgelaufen ist, gucken, ob der die rechte hat und so weiter und so fort, das geht ja alles sequentiell. und wenn ich dann denke irgendwann, da fehlt noch ein schritt, dann kann ich den in dieses sequentielle wieder rein. aber wenn ich irgendwann so einen sequentiellen algorithmus hab, so ne funktion, die das irgendwie pr\u252\'FCft, die gibt's ja an verschiedenen stellen. die gibt's ja jetzt einerseits im authentifizierungs-backend, die gibt's aber auch andererseits dann im daten/ in nem anderen backend, wo es halt nur darum geht, dokumente abzulegen. da geht es dann ja auch darum, dass man sagt: hey, ich bekomm das dokument, ich speicher das mal irgendwie ab, oder ich les irgendwie sachen aus, und ich send irgendwas zur\u252\'FCck. }{\f1\fs18\b0\i0\cb4\chshdng0\chcbpat4 das hei\loch\af1\hich\af1\dbch\af1\uc1\u223\'DFt so gewisse/ switche ich dann halt intern, denke ich, rum, zwischen diesen einzelnen dom\u228\'E4nen. dass ich sage hey, da gibt's dieses sequentielle problem, da gibt's dieses sequentielle problem. und die bearbeite ich dann so als kleine module.}}